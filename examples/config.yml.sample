############################################
# Driver type supported: dummy, HPMSA
############################################

# Port run exporter
port: 8888

# Host run in exporter
host: 0.0.0.0

# Enable debug logging for exporter
debug: false

# San-exporter will send request to SAN storage interval
# to get information and cache to file
# This config can be set in global for apply to all backend
# or can be set for specific backend
# You should set this value for each backend is not less than the driver's value recommendation.
# Unit: second
# Default: interval = 5m
interval: 300

# Timeout to mask data in cache file is old
# Calculated from the last time data in the cache file was updated to the current.
# This config can be set in global for apply to all backend
# or can be set for specific back-end
# You should set this value for each backend is not less than the driver's value recommendation.
# Unit: second
# Default: timeout = 10m
timeout: 600

# Default: /var/log/san_exporter.log
log_file: "/var/log/san_exporter.log"


enabled_backends:
- dummy_backend

backends:
- name: "dummy_backend"
  dummy_backend_url: "http://localhost:5001/api/v1"
  dummy_backend_username: "username"
  dummy_backend_password: "password"
  driver: "dummy"
  timeout: 600
  interval: 300
  optional_metrics:
    cpu: True

# HPMSA Driver
# Tested with MSA 2050, MSA 2040
# Supported optional metrics: volume, alert
- name: "hpmsa"
  hpmsa_backend_host: "10.11.12.13"
  hpmsa_backend_username: "manage"
  hpmsa_backend_password: "!manage"
  driver: "hpmsa"
  optional_metrics:
    "volume": False
    "alert": False

# HPE 3par Driver
# Tested with HPE 3par 8440
# Supported optional metrics: port, cpu, cpg, alert
- name: "3par_8440"
  hpe3par_api_url: "http://127.0.0.1:5001/api/v1"
  hpe3par_username: "hpe3par_admin"
  hpe3par_password: "hpe3par_password"
  san_ssh_ip: "127.0.0.1:5001"
  san_ssh_user: "hpe3par_admin"
  san_ssh_pass: "hpe3par_password"
  san_ssh_port: 22
  timeout: 600
  interval: 300 # should not less than 5m, see the driver config below
  driver: "hpe3par"
  pools: UnitTestCPG, UnitTestCPG2 # all: to get all cpg
  optional_metrics:
    port: False
    cpu: False
    cpg: True
    alert: True # Note: this alert metrics will be collected via SSH

# SC8000 Driver
- name: "sc8000"
  DSM_api_ip: "10.1.1.1"          # IP DSM
  DSM_api_port: "3033"            #Port API (default)
  DSM_username: "user_DSM"
  DSM_password: "pass_DSM"
  timeout: 600
  interval: 300
  driver: "sc8000"
  apiversion: "3.5"    #x-dell-api-version
  verify_cert: False
#List of SC's IP which want to get metrics. Using 'sc8000_ip: all' to get the metrics of all SC that were managed by DSM 
  sc8000_ip:  
    - 127.0.0.1
    - 127.0.0.2
  severity_alert: # List severrity alert want to alert: Degraded, Critical, Down, Inform
    - Critical

# IBM V7000 driver: we're getting IBM V7000 metrics via IBM Spectrum Rest API
- name: "v7k_01"
  using_ibm_spectrum_control: "yes"
  ibm_spectrum_control:
    url: "https://127.0.0.1:9120"
    username: "monitor"
    password: "password"
  timeout: 600
  interval: 300 # should not less than 5m, see the driver config below
  driver: "v7k"
  pools: all
  optional_metrics:
    port: True
    cpg_statics: True
  v7000_ip: # List V7000 IP on IBM Spectrum need to get metrics
    - 127.0.0.1
    - 127.0.0.2

# Dell Unity
- name: "dellunity"
  dellunity_api_ip: "1.1.1.1"
  dellunity_username: "monitor"
  dellunity_password: "password"
  timeout: 600
  interval: 300
  driver: "dellunity"
  optional_metrics:
    pool: true
    node: true
    fcport: true
    disk: true
    lun: true
    alert: true
    
# NetApp ONTAP
- name: "netapp"
  netapp_api_ip: "10.2.2.xxx"
  netapp_api_port: "443"
  netapp_username: "netapp_admin"
  netapp_password: "netapp_password"
  timeout: 600
  interval: 300
  driver: "netapp"
  optional_metrics:
    cluster: true
    pool: true
    node: true
    disk: true
